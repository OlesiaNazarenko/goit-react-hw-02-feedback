{"version":3,"sources":["components/statistic/Statistic.jsx","components/feedbackOptions/FeedbackOptions.jsx","components/section/Section.jsx","components/notification/Notification.jsx","App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css","components/section/Section.module.css"],"names":["Statistic","good","bad","neutral","total","positivePercentage","className","FeedbackOptions","options","onLeaveFeedback","s","btnList","map","option","btn","type","value","onClick","Section","title","children","section","Notification","message","App","state","setState","prevState","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wOAGe,SAASA,EAAT,GAAmE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,IAAIC,EAAoC,EAApCA,QAAQC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,mBACvD,OACI,gCACI,2CACA,qBAAIC,UAAU,gBAAd,UACI,qBAAIA,UAAU,gBAAd,mBAAoC,sBAAMA,UAAU,eAAhB,SAAgCL,OACpE,qBAAIK,UAAU,gBAAd,sBAAuC,sBAAMA,UAAU,kBAAhB,SAAmCH,OAC1E,qBAAIG,UAAU,gBAAd,kBAAmC,sBAAMA,UAAU,cAAhB,SAA+BJ,OAClE,qBAAII,UAAU,gBAAd,oBAAqC,sBAAMA,UAAU,gBAAhB,SAAiCF,OACtE,qBAAIE,UAAU,gBAAd,gCAAiD,uBAAMA,UAAU,mBAAhB,UAAoCD,EAApC,gB,oBCRlD,SAASE,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC9C,OACI,oBAAIH,UAAWI,IAAEC,QAAjB,SACKH,EAAQI,KAAI,SAAAC,GACT,OACA,6BACI,wBACIP,UAAWI,IAAEI,IACbC,KAAK,SACLC,MAAOH,EACPI,QAAS,kBAAMR,EAAgBI,IAJnC,SAMKA,KAPAA,Q,oBCNV,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASd,UAAWI,IAAEW,QAAtB,UACE,oBAAIf,UAAWI,IAAES,MAAjB,SAAyBA,IACxBC,KCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OACI,mCACI,4BAAKA,MCCjB,IAAMf,EAAU,CAAC,OAAQ,UAAW,OAEfgB,E,4MACnBC,MAAQ,CACRxB,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGLO,gBAAkB,SAAAI,GAAM,OACtB,EAAKa,UAAS,SAAAC,GAAS,sBAAQd,EAASc,EAAUd,GAAU,O,wDAE9D,WACE,MAA+Be,KAAKH,MACpC,OADA,EAAQxB,KAAR,EAAcC,IAAd,EAAmBC,U,6CAKrB,WACE,OACEyB,KAAKC,mBAAqBC,KAAKC,MAAOH,KAAKH,MAAMxB,KAAO2B,KAAKC,qBAAwB,KAAO,I,oBAGhG,WACE,MAA+BD,KAAKH,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,QACbC,EAAQwB,KAAKC,qBACnB,OACA,mCACI,eAACX,EAAD,CAASC,MAAM,wBAAf,UAEE,cAACZ,EAAD,CAAiBC,QAASA,EAASC,gBAAiBmB,KAAKnB,kBAEhD,IAAVL,EACC,cAACkB,EAAD,CAAcC,QAAQ,sBAGlB,cAACvB,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBuB,KAAKI,6C,GAvCRC,aCJjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,kBCAnED,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.0ef927ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nexport default function Statistic({good, bad,neutral,total,positivePercentage }) {\r\n    return (\r\n        <div>\r\n            <p>Statistics</p>\r\n            <ul className=\"statisticList\">\r\n                <li className=\"statisticItem\">Good: <span className=\"goodFeedback\">{good}</span></li>\r\n                <li className=\"statisticItem\">Neutral: <span className=\"neutralFeedback\">{neutral}</span></li>\r\n                <li className=\"statisticItem\">Bad: <span className=\"badFeedback\">{bad}</span></li>\r\n                <li className=\"statisticItem\">Total: <span className=\"totalFeedback\">{total}</span></li>\r\n                <li className=\"statisticItem\">Positive feedback: <span className=\"positiveFeedback\">{positivePercentage}%</span></li>\r\n            </ul>\r\n        </div>\r\n       \r\n    )\r\n}\r\nStatistic.propTypes = {\r\n  good: propTypes.number,\r\n  neutral: propTypes.number,\r\n  bad: propTypes.number,\r\n  total: propTypes.number,\r\n  positivePercentage: propTypes.number,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nexport default function FeedbackOptions({options, onLeaveFeedback}) {\r\n    return (\r\n        <ul className={s.btnList}>\r\n            {options.map(option => {\r\n                return (\r\n                <li key={option}>\r\n                    <button\r\n                        className={s.btn}\r\n                        type=\"button\"\r\n                        value={option}\r\n                        onClick={() => onLeaveFeedback(option)}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                </li>\r\n            )\r\n                \r\n            }\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import propTypes from \"prop-types\";\r\nimport s from 'components/section/Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n    \r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.array,\r\n};","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n    return (\r\n        <>\r\n            <p>{ message }</p>\r\n        </>\r\n    )\r\n}\r\nNotification.propTypes = {\r\n  message: propTypes.string,\r\n};","import React, {Component} from \"react\";\n\nimport Statistic from './components/statistic/Statistic'\nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions'\nimport Section from './components/section/Section'\nimport Notification from './components/notification/Notification'\n\nconst options = ['good', 'neutral', 'bad'];\n\nexport default class App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n \n  onLeaveFeedback = option =>\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  \n  countTotalFeedback() {\n    const { good, bad, neutral } = this.state;\n    return (\n       good + bad + neutral\n    );\n  }\n  countPositiveFeedbackPercentage() {\n    return (\n      this.countTotalFeedback ? Math.round((this.state.good / this.countTotalFeedback()) * 100) : 0\n    )\n  }\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedback();\n    return(\n    <>\n        <Section title=\"Please leave feedback\" >\n        \n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\n        \n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) :\n          (\n              <Statistic\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercentage={this.countPositiveFeedbackPercentage()} />\n          )\n        }\n      </Section>\n    </>\n  );\n  }\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"FeedbackOptions_btnList__uQya5\",\"btn\":\"FeedbackOptions_btn__6ScKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__AhwOP\"};"],"sourceRoot":""}